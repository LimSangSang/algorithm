'''
k번 째 약수

어떤 자연수 p와 q가 있을 때, 만일 p를 q로 나누었을 때 나머지가 0이면 q는 p의 약수이다. 6을 예로 들면
6÷1=6...0 
6÷2=3...0 
6÷3=2...0 
6÷4=1...2 
6÷5=1...1 
6÷6=1...0
그래서 6의 약수는 1, 2, 3, 6, 총 네 개이다.
두 개의 자연수 N과 K가 주어졌을 때, N의 약수들 중 K번째로 작은 수를 출력하는 프로그램을 작성하시오.
▣ 입력설명
첫째 줄에 N과 K가 빈칸을 사이에 두고 주어진다. N은 1 이상 10,000 이하이다. K는 1 이상 N 이하이다.
▣ 출력설명
첫째 줄에 N의 약수들 중 K번째로 작은 수를 출력한다. 만일 N의 약수의 개수가 K개보다 적어서 K번째 약수가 존재하지 않을 경우에는 -1을 출력하시오.
▣ 입력예제 1 63
▣ 출력예제 1 3
'''

# 나의 풀이
n, k = map(int, input().split())

arr = []
for i in range(1, n+1):
    if n % i == 0:
        arr.append(i)

if k > len(arr):
    print(-1)
else:
    print(arr[k-1])

# 해설
n, k = map(int, input().split())

cnt = 0
for i in range(1, n+1):
    if n%1 == 0:
        cnt+=1
    if cnt == k:
        print(i)
        break
else:
    print(-1)

'''
k번째 수

N개의 숫자로 이루어진 숫자열이 주어지면 해당 숫자열중에서 s번째부터 e번째 까지의 수를 오름 차순 정렬했을 때 k번째로 나타나는 숫자를 출력하는 프로그램을 작성하세요.
▣ 입력설명
첫 번째 줄에 테스트 케이스 T(1<=T<=10)이 주어집니다.
각 케이스별
첫 번째 줄은 자연수 N(5<=N<=500), s, e, k가 차례로 주어진다. 두 번째 줄에 N개의 숫자가 차례로 주어진다.
▣ 출력설명
각 케이스별 k번째 수를 아래 출력예제와 같이 출력하세요.
▣ 입력예제 1 2
6253 527389 15 3 10 3
4 15 8 16 6 6 17 3 10 11 18 7 14 7 15
▣ 출력예제 1 
#1 7
#2 6
'''

#나의 풀이
t = int(input())

for i in range(1, t+1):
    n, s, e, k = map(int, input().split())
    arr = list(map(int, input().split()))

    temp = arr[s-1:e]
    temp.sort()

    print(i, temp[k-1])
    
    

    